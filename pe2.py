# pe2.py
#Project Euler Problem 2 - 20/08/2011

#Each new term in the Fibonacci sequence is generated by adding the previous two terms.
#By starting with 1 and 2, the first 10 terms will be:
#
#  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million,
#find the sum of the even-valued terms.



sum = 0

f = [1,1]

for i in range(100):                      
    k = f[1]                                  #Use k to store f[1]
    f[1] = f[0] + f[1]                     #Calculate the next fibonacci number
    f[0] = k                                  #Se f[0] as the previous value of f[1], using k
    if i % 3 == 0:                          #every third fibonacci number in our lising is even
        print f[1]                             #have odd + odd, odd + even, even + odd, odd + odd ...
        sum = sum + f[1]
    if f[1] > 4000000:                   #Only want values less than four million
        break
    
print sum  
