#pe18.py

#getting maximal sums
def getMaximals(x):
    r = []
    for i in range(len(x) - 2):
        m = max(x[i],x[i+1])
        r.append(m)
    r.append(max(x[len(x) - 1],x[len(x) - 2]))
    #r.pop(len(x)-1)
    return r


x1 = [75]
x2 = [95, 64]
x3 = [17, 47, 82]
x4 = [18, 35, 87, 10]
x5 = [20, 4, 82, 47, 65]
x6 = [19, 1, 23, 75, 3, 34]
x7 = [88, 2, 77, 73, 7, 63, 67]
x8 = [99, 65, 4, 28, 6, 16, 70, 92]
x9 = [41, 41, 26, 56, 83, 40, 80, 70, 33]
x10 = [41, 48, 72, 33, 47, 32, 37, 16, 94, 29]
x11 = [53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14]
x12 = [70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57]
x13 = [91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48]
x14 = [63, 66, 4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31]
x15 = [4, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 4, 23]

y = [x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15]
# The aim is to alter the above triangle to represent cumulative maximal sums
# along each path.



x2[0] = x2[0] + x1[0]
x2[1] = x2[1] + x1[0]


    

